@model RestaurantRater.Models.Restaurant
<!--^model reference^-->
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();

<div class="form-horizontal">
    <h4>Restaurant</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RestaurantID)

    <!--Form items NAME, ADDRESS, RATING-->
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "Text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Address, new { htmlAtrributes = new { @class = "control-label col-md-2" } })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor( model => model.Address, "", new { @class = "text-danger"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Rating, new { htmlAtrributes = new { @class = "control-label col-md-2" } })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--Add Save button-->
    <div class="form-group">
        <div class=" col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            @Html.ActionLink("Back to index", "Index")
        </div>
    </div>

</div>

<!--Notice on line 17: the HiddenFor() statement is keeping the RestaurantID hidden so that a user can not edit it.  It must remain its original value.  But, since we do need to USE the Id, regardless of its editability, it still must be in our view.-->



}